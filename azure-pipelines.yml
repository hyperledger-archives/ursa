---
trigger:
  branches:
    include: [master]

pr: [master]

variables:
  SODIUM_BUILD_STATIC: 1

jobs:
  - job: rustfmt
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
          $HOME/.cargo/bin/rustup component add rustfmt
        displayName: 'Install rust and format'
      - script: $HOME/.cargo/bin/cargo fmt --all -- --check
        displayName: 'rustfmt'
  - job: clippy
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
          $HOME/.cargo/bin/rustup component add clippy
        displayName: 'Install rust and clippy'
      - script: $HOME/.cargo/bin/cargo clippy --all -- -W clippy::not_unsafe_ptr_arg_deref -A clippy::many_single_char_names
        displayName: 'cargo clippy'
  - job: audit
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script:
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
          command -v $HOME/.cargo/bin/cargo-audit >/dev/null 2>&1 || $HOME/.cargo/bin/cargo install cargo-audit
        displayName: 'Install rust and audit'
      - script: $HOME/.cargo/bin/cargo check && $HOME/.cargo/bin/cargo audit
        displayName: 'cargo audit'
  - job: build
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        displayName: 'Install rust'
      - script: $HOME/.cargo/bin/cargo build
        displayName: 'cargo build'
  - job: portable
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        displayName: 'Install rust'
      - script: $HOME/.cargo/bin/cargo build --manifest-path=libzmix/Cargo.toml --no-default-features --features=portable
        displayName: 'cargo build portable'
  - job: test
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        displayName: 'Install rust'
      - script: SODIUM_BUILD_STATIC=1 $HOME/.cargo/bin/cargo test --release
        displayName: 'test release static sodium'
  - job: asm
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
          rustc --version
          rustup toolchain install nightly
          rustup default nightly
          rustc --version
        displayName: 'Install rust, select nightly'
      - script: $HOME/.cargo/bin/cargo build --manifest-path=libzmix/Cargo.toml --no-default-features --features=asm
        displayName: 'build asm'
  - job: secp256k1
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        displayName: 'Install rust'
      - script: $HOME/.cargo/bin/cargo run --release --manifest-path=libursa/Cargo.toml --bin test_secp256k1 --features="benchmarksecp256k1"
        displayName: 'test secp256k1'
  - job: ed25519
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        displayName: 'Install rust'
      - script: SODIUM_BUILD_STATIC=1 $HOME/.cargo/bin/cargo run --release --manifest-path=libursa/Cargo.toml --bin test_ed25519 --features="benchmarked25519"
        displayName: 'test ed25519'
  - job: docs
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        displayName: 'Install rust'
      - script: $HOME/.cargo/bin/cargo doc --no-deps
        displayName: 'cargo doc'
  - job: wasm
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        displayName: 'Install rust'
      - script: $HOME/.cargo/bin/wasm-pack build libursa -- --no-default-features --features=wasm
        displayName: 'wasm pack'
